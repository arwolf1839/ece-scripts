#+TITLE: Escenic Installer User Guide
#+AUTHOR: Vizrt Online / The SaaS Team
#+OPTIONS: H:6 num:5 toc:2 

* Introduction
The Escenic Content Engine Installer, =ece-install=  is a command line
utility for installing the Escenic Content Engine. In addition to
installing the Content Engine itself, =ece-install= also automates the
installation and configuration of other commonly-used components of
Escenic-based sites, such as:

 - Java
 - Tomcat application server
 - MySQL/Percona database server
 - Varnish cache server
 - Munin monitoring server
 - NFS server and clients
 - Memcached distributed memory cache

You can use =ece-install= to install The Content Engine and related
components on a wide range of GNU Linux distributions and Unix or
Unix-like operating systems, but the level of support varies between
platforms. On a fully-supported operating system (for example Debian 6.0),
=ece-install= can both install and configure all required
components, so that the entire process is reduced to a simple sequence
of =ece-install= commands. 

On less well-supported platforms, =ece-install= may not be able to
automatically install some third-party components. You will then need to
manually install some components. However, the process is very
straightforward, since =ece-install= tells you which components you
need to install manually, and it still handles the configuration of
these components for you.

** Supported Operating Systems
=ece-install= works best on Debian 6.0 (Squeeze) or later. It should,
however, work on any Unix-like system that provides a BASH command
shell (version 4.2 or later). 


Here is an overview of the situation on some of the most popular
platforms:

 - Debian-based operating systems :: On Debian 6.0 or later,
     installation is fully automated. =ece-install= installs and
     configures all required components. This may also be the case on
     some Debian-based distributions. On recent Ubuntu distributions,
     however, you will need to manually install some components. For
      details, see Tested Operating Systems.

 - RedHat-based operating systems :: =ece-install= support for
      RedHat-based operating systems is constantly improving. However,
      since the public RedHat software repositories are significantly smaller
      than the Debian ones, it may often be necessary to manually
      install some components. For
      details, see Tested Operating Systems.

 - Other GNU/Linux and Unix systems :: =ece-install= does not currently support
      automated installation of third-party components on these
      platforms, so you will need to install them manually. It will,
      of course, tell you which components you need to install, and
      configure them for you.

** ece-install Requirements
Whichever operating system(s) you will be installing on, you must ensure
that the following requirements are met:

 - Sufficient memory :: The precise amount of memory required by
      =ece-install= depends on what components are to be installed. To
      successfully install a complete software stack on one machine,
      you need at least 3GB of RAM. If you are installing on a
      virtual machine it is important to remember this requirement
      when creating the virtual machine.

 - Internet connection :: =ece-install= needs an Internet
      connection. Ideally it should be a fast connection, since it
      will need to download several hundred megabytes of data.

 - Firewall rules :: Your firewall settings must allow  =ece-install=
                     to make outgoing connections from the machine on
                     which it is running to the following ports:
    - 80 (standard HTTP)
    - 443 (HTTPS)

****** On non-GNU/Linux systems
=ece-install= relies on the GNU versions of various tools such as =find=, =cp=
and =tar=. If you use =ece-install= on any system which provides different
versions of these tools by default, then you must make sure that:

 - The GNU tools are installed on the system
 - That the GNU tools take precedence in the command PATH offered to
   =ece-install=.

Platforms on which you will need to do this include:

 - Any BSD-based system (including Mac OS X)
 - Solaris

** <<<Tested Operating Systems>>>
| Operating system     | Status                                              | Date updated     |
|----------------------+-----------------------------------------------------+------------------|
| CentOS 6.2           | HA, APR & monitoring are not automatic              | 2012-03-07 13:42 |
| Debian 6.0 (squeeze) | Everything is 100% automatic                        | 2012-02-27 13:18 |
| Ubuntu 11.10         | Everything except Tomcat/APR wrappers are automatic | 2012-02-27 13:19 |
| Ubuntu LTS 10.04     | Everything except Tomcat/APR wrappers are automatic | 2012-02-27 13:19 |
| Ubuntu LTS 12.04     | Everything except Tomcat/APR wrappers are automatic | 2012-07-27 03:27 |

* Using ece-install
The various software components required to run an Escenic-powered web
site are usually installed on a cluster of servers, with different
components installed on each server according to the
function it will perform. The set of components installed on a
particular server is called its *profile*.

The overall procedure for installing Escenic on a cluster of machines
is as follows: 

 1. Determine the profile of each server in the cluster. For
    descriptions of all available profiles, see Server Profiles.
 1. For each server:
    1. Log on to the server.
    1. Install the =ece-install= script (see Get ece-install).
    1. Become the root user (see Become Root).
    1. Create an =ece-install= configuration file (see Create a
       Configuration File).
    1. Run the =ece-install= script, specifying the appropriate
       profile (see Run ece-install).

** <<<Get ece-install>>>
Use =git= to get the ece-install script. Type this in
your shell:

#+BEGIN_SRC text
$ git clone https://github.com/skybert/ece-scripts.git
#+END_SRC

The reason why we want you to use git to download ece-install, is that
you later easily can get the latest changes (for instance after we fix
one of your reported issues), by doing "git pull" inside the
ece-scripts directory.

If you have problems installing git, you can also download a ZIP
archive here: https://github.com/skybert/ece-scripts/zipball/master

** <<<Become Root>>>
You must be the root user to run =ece-install=. If you try to run it as
an ordinary user, it will complain:
#+BEGIN_SRC text
[ece-install] You must be root when running ece-install
#+END_SRC

To become root on Ubuntu-based systems and Mac OS X, enter:
#+BEGIN_SRC text
$ sudo su
#+END_SRC

On all other Unix-like system, enter:
#+BEGIN_SRC text
$ su -
#+END_SRC

#+BEGIN_QUOTE
Note that using =sudo= to run =ece-install= (that is, entering  "=sudo
ece-install=") may not work. You should actually become the root user.
#+END_QUOTE

** <<<Create a Configuration File>>>
=ece-install= expects to find a configuration file called
=ece-install.conf= in the root user's home directory, which is usually
=/root=.

If you forget to provide such a file before running =ece-install=,
then =ece-install= will complain:
#+BEGIN_SRC text
[ece-install] /root/ece-install.conf doesn't exist, I cannot live without it :-(
#+END_SRC

=/root/ece-install.conf=. may contain a large number of configuration
parameters, but the minimum requirement is that it contains:

 * A user name and password for downloading software from Escenic
   Technet.
 * The parameter =fai_enabled=1=.
 * A parameter of the form =fai_<profile>_install=1= where =<profile>=
   is the name of the *profile* you want to install (see Server
   Profiles for information about profiles).

For example:
#+BEGIN_SRC conf
technet_user=<user>
technet_password=<password>
fai_enabled=1
fai_<profile>_install=1
#+END_SRC

If the configuration file does not contain these settings then
=ece-install= will complain. For example:
#+BEGIN_SRC text
[ece-install] Be sure to set technet_user and technet_password
[ece-install] in /root/ece-install.conf
#+END_SRC

Depending on what components you are installing on the server, you may
need to include other configuration parameters in the file. If you are
installing the Widget Framework, for example, you will need to specify
additional download credentials (see ??). In most cases, however,
parameters have default settings that enable =ece-install= to complete
installation with very few settings.

****** Interactive Mode
The setting =fai_enabled=1= tells =ece-install= to run in *fully
automated install (FAI)* mode. In this mode =ece-install= reads
parameters from =ece-install.conf=. If it cannot find all the
parameters it needs in the configuration file, then it fails. This is
the recommended way to use =ece-install=.

If you omit this parameter then =ece-install= will not read any
=fai_???= parameters from =ece-install.conf= and will prompt for them
interactively instead. You are, however, *strongly advised* not to run
=ece-install= in interactive mode:

 * Interactive mode is much less flexible than FAI mode.
 * Interactive mode is not actively maintained and may therefore be
   unreliable.
 * Use of interactive mode is therefore not supported.

** <<<Run ece-install>>>
To run =ece-install=, enter:
#+BEGIN_SRC text
# bash ece-install <options>
#+END_SRC

The following options may be specified with the command:

 - =[-v|--verbose]= :: Requests verbose output from =ece-install=.

 - =[-f|--file] <conf-file-path>= :: Instructs =ece-install= to read
      configuration data from the specified file.

=ece-install= writes a log file located at
=/var/log/ece-install.log=. All output generated by all the commands
it executes is written to this file. You can use =tail= to keep an eye
on what is being written to the log.

=ece-install= tries to "fail fast", exiting as soon as it detects an
error and reporting the failure. For example:
#+BEGIN_SRC text
[ece-install-1] The command [cd /does/not/exist] FAILED, exiting :-(
[ece-install-1] See /var/log/ece-install.log for further details.
#+END_SRC

If you run into problems and the log file does not provide enough
clues about what is going wrong, the best debugging method is to run
the BASH interpreter with the -x flag:
#+BEGIN_SRC text
# bash -x ece-install
#+END_SRC

Doing this lets you see everything that BASH does while executing the
script - how wild card variables are  expanded and so on.

=ece-install= displays a series of progress messages during the
installation process.

You can redirect standard output to a log file for easy reading later
on as follows:
#+BEGIN_SRC text
# bash ece-install > ece-install.out
#+END_SRC

If you are logged into the host via SSH, you can make it possible to
log out and leave =ece-install= running in the background by adding
=nohup= at the start of the command and an ampersand at the end, as follows:
#+BEGIN_SRC text
# nohup bash ece-install > ece-install.out &
#+END_SRC

****** After Installing
When installation is completed an information message is
displayed. This contains important information about what you
should do next, plus references to where you can find useful
information, so you should read it carefully.

You should now set a password for the user =escenic= (which has been
created for you by =ece-install=). To do this enter:

#+BEGIN_SRC text
# passwd escenic
#+END_SRC

The =escenic= user is the user you will need to use for most
escenic-related purposes.

** Preventing accidental execution of ece-install 
You can ensure that =ece-install= is not executed accidentally by
creating a *lock file*. Simply create a file with this path:
#+BEGIN_SRC text
/var/lock/ece-install.lock
#+END_SRC
    
If this file is present then =ece-install= will fail fast as follows:
#+BEGIN_SRC text
The lock file is present: /var/lock/ece-install.lock and ece-install
will therefore refuse to run.
#+END_SRC

The lock file does not need to contain anything, it just needs to exist.

* <<<Server Profiles>>>

=ece-install= installs *profiles*. A profile is a pre-defined set of
software components that enables a host computer to play a specific
role in an Escenic installation.

The profile to be installed by =ece-install= is determined by setting
one of the following parameters in =ece-install.conf=:

 - =fai_editor_install=1= :: Installs all the components that need to
      be installed to create an Escenic *editorial server*.
 - =fai_presentation_install=1= :: Installs all the components that
      need to be installed to create an Escenic *presentation server*.
 - =fai_wf_install=1= :: Installs the Widget Framework on an editorial
      or presentation server.
 - =fai_db_install=1= :: Installs a Database Server.
 - =fai_cache_install=1= :: Installs a Cache Server.
 - =fai_search_install=1= :: Installs a Search Server.
 - =fai_rmi_install=1= :: Installs an RMI Hub.
 - =fai_monitoring_install=1= :: Installs a Monitoring Server.
 - =fai_publication_create=1= :: Creates an Escenic publication.
 - =fai_all_install=1= :: Installs all of the above on one host
      machine.
 - =fai_restore_from_backup=1= :: Restores a backup created with =ece=.
 - =fai_analysis_install=1= :: Installs and configures an Escenic Analysis Engine.
 - =fai_nfs_server_install=1= :: Installs an NFS server.
 - =fai_nfs_client_install=1= :: Installs an NFS client.
 - =fai_vip_install=1= :: Installs virtual IP (VIP) providers.

There are a number of common components that are included in all or
most of the profiles. These are described below.

** <<<=fai_editor_install=>>>
To use this profile add =fai_editor_install=1= to your
=ece-install.conf= file.

This profile contains all the components that need to be installed to
create an Escenic *editorial server*. An editorial server (sometimes
also called a publication server) hosts a Content Engine used for editorial
purposes (primarily Content Studio sessions).

** <<<=fai_presentation_install=>>>
To use this profile, add =fai_presentation_install=1= to your
=ece-install.conf= file.

This profile contains all the components that need to be installed to
create an Escenic *presentation server*. A presentation server hosts a
Content Engine used for serving publications to web site
users. Differences between this and an editorial server include:

 * Only the Escenic administration web-app =escenic-admin= and publications are
   deployed. Other editorial web-apps such as Web Studio are not
   required.
 * Memcached, the distributed memory cache is installed.

** <<<=fai_wf_install=>>>
To use this profile, add the following settings:
#+BEGIN_SRC text
fai_wf_install=1
wf_user=<user-name>
wf_password=<password>
#+END_SRC

to your =ece-install.conf= file.

=wf_user= and =wf_password= must contain your Widget Framework Maven
repository credentials (supplied when you purchased the Widget
Framework). If you do not have these credentials, please contact
support@escenic.com.

This profile installs the Escenic Widget Framework. It should be
installed on a machine where you have already installed either an
editorial or presentation profile. Exactly which machines you install
the Widget Framework on depends on your deployment strategy.

** <<<=fai_db_install=>>>
To use this profile, add =fai_db_install=1= to your
=ece-install.conf= file.

When this profile is used on a supported version of Debian or Ubuntu,
=ece-install= installs all the components needed to create an Escenic
database, based on the Percona distribution of MySQL. On any other
platform you must install either Percona or a standard MySQL
distribution yourself before running =ece-install=.

Otherwise, this profile contains all the Escenic components needed on
a database server plus the correct database schema for the Content
Engine version and plug-in versions you are installing.

If an Escenic database has already been installed on the machine, then
=ece-install= will fail and display an information message:

#+BEGIN_SRC text
[ece-install] Setting up the ECE database schema ...
ERROR 1007 (HY000) at line 1: Can't create database 'ece5db'; database exists
ERROR 1050 (42S01) at line 2: Table 'DBChangeLog' already exists
[ece-install] running tables FAILED, exiting :-(
#+END_SRC

If you actually want to re-install the database you can do so by
adding this setting to =ece-install.conf= before you run =ece-install=:

#+BEGIN_SRC conf
fai_db_drop_old_db_first=1
#+END_SRC

Given that the mysqld is installed, this profile will download all the
Escenic components and install the ECE database schema based from the
SQL files contained inside the distribution bundles specified with in
the =technet_download_list= and =wf_dowload_list= variables. The
defaults are inside the =ece-install= script itself, but you can
overrides these in your =ece-install.conf= if you wish different minor
versions of the ECE and plugins.

*** Master & slave setup
You can easily use =ece-install= to set up master and slave databases
on different hosts.

First create the master database using these =ece-install.conf= settings:
#+BEGIN_SRC conf
fai_enabled=1
fai_db_install=1
fai_db_master=1
fai_db_replication=1
#+END_SRC

When you run =ece-install= with these settings, the output log
messages will include information that you need for creating the slave database:
#+BEGIN_SRC text
[ece-install-35] - DB is now set up on localhost:3306
[ece-install-35] - ece-install.conf for slave: fai_db_master_log_file=mysql-bin.000013
[ece-install-35] - ece-install.conf for slave: fai_db_master_log_position=106
#+END_SRC

On the slave database host you can then use these values in your
=ece-install.conf= file as follows:
#+BEGIN_SRC conf
fai_enabled=1
fai_db_install=1
fai_db_replication=1
fai_db_master=0
fai_db_master_host=my-db-master
fai_db_master_log_file=mysql-bin.000013
fai_db_master_log_position=106
#+END_SRC

=ece-install= uses internal defaults to create a replication user and
credentials. You can override these defaults by setting additional
parameters in =ece-install.conf=. For details, see ??.

** <<<=fai_cache_install=>>>
To use this profile, add =fai_cache_install=1= to your
=ece-install.conf= file.

When this profile is used on a supported version of Debian or Ubuntu,
=ece-install= installs the latest Varnish 3.x caching server from the
Varnish APT repository. On any other platform you must install Varnish 3.x
yourself before running =ece-install=.

Once Varnish is installed, =ece-install= configures it to suit the
typical requirements of an Escenic site:

 * Sets up the cache server on port 80
 * Creates an access control list (ACL) of IP addresses allowed to access
   privileged web applications such as =/escenic-admin=, =/escenic= and
   =/webservice=. If you are running =ece-install= in an SSH session,
   then it includes the IP address from which you connected in the ACL
   so that you can access these applications without needing to
   manually edit the ACL or disable security.
 * Sets up sticky sessions/session binding
 * Sets up a back-end cluster and allows the user?? to enter the
   various backend servers that will serve the web site.
 * Sets up a configuration that strips cookies from static  resources,
   such as CSS files, JS files and images.
 * Installs the =nginx= web server for serving static content and
   configures Varnish accordingly. This is particularly useful for
   installations where VME Online servers need to access content.

TBD:
- If run on a Linux platform, the script will tweak the kernel
  parameters for optimal TCP handling for a web facing server.
- let the /munin run through on port 80, requiring the connecting IPs
  to be in the staff network ACL, defined in the Varnish
  configuration. 

** <<<=fai_search_install=>>>
To use this profile, add =fai_search_install=1= to your
=ece-install.conf= file.

This profile installs search components (Apache Solr plus the Escenic
=indexer= web app.

** <<<=fai_rmi_install=>>>
To use this profile, add =fai_rmi_install=1= to your
=ece-install.conf= file.

This profile installs an RMI hub.

** <<<=fai_monitoring_install=>>>
To use this profile, add =fai_monitoring_install=1= to your
=ece-install.conf= file.

This profile installs a Munin gatherer plus a web server for providing
access to the reports Munin generates.

TBD: This profile will also install the Nagios interface for
monitoring the different nodes. 

** <<<=fai_publication_create=>>>
To use this profile, add =fai_publication_create=1= to your
=ece-install.conf= file.

This profile creates a publication for you. It should be used on a
machine where you have already installed either an editorial or
presentation profile.

If the Widget Framework is installed on the machine, then the
create publication is based on the Widget Framework. Otherwise the
publication is based on the clean demo WAR supplied with the Content Engine.

** <<<=fai_all_install=>>>
To use this profile, add =fai_all_install=1= to your
=ece-install.conf= file.

This profile is primarily intended for use by developers and system
administrators as a test environment. It is *not* considered suitable
for production purposes. A complete stack including caching
server, application server, Escenic Content Engine, assembly host,
database and Widget Framework is installed. In addition, a publication
is created.

** <<<=fai_restore_from_backup=>>>
To use this profile, add =fai_restore_from_backup=1= to your
=ece-install.conf= file.

Unlike all the other profiles, this profile does not install anything
or create anything new. Instead, it restores a backup you have
previously created using the =ece= script - like this, for example:
#+BEGIN_SRC text
$ ece -i <instance> backup
#+END_SRC

Exactly what such a backup contains depends on:

 * What was present on the host machine where the backup was created
 * What options were specified when the backup was created.

It may, however, contain:

 * The Escenic software components (Content Engine etc.) installed on the host.
 * Content Engine, cache and web server configuration data.
 * A database dump.
 * An Escenic multimedia archive (images, video files and so on).

You can use this profile in two ways:

 * To restore a host to an earlier state.
 * To install a copy of some other installation on a "clean" host.

In order to use this profile you have to set some additional
parameters in =ece-install.conf= in order to specify the location of
the backup file you want to restore and the specific items you want to
restore from the file.

The parameters you can use together with  =fai_restore_from_backup= to
specify what you want to restore are:

|---------------------------------+---------+-----------------------------------------------------------|
| Parameter                       | Default | Description                                               |
|---------------------------------+---------+-----------------------------------------------------------|
| ~fai_restore_all~               |       0 | Restore all backup items. Requires a full backup tarball. |
| =fai_restore_db=                |       0 | Install the database server and restore its contents      |
| =fai_restore_data_files=        |       0 | Restore the Solr and Content Engine data files            |
| =fai_restore_configuration=     |       0 | Restore the Solr and content Engine configuration files   |
| =fai_restore_software_binaries= |       0 | Restore the Escenic and Apache Tomcat software            |
| =fai_restore_from_file=         |      "" | The .tar.gz produced by =ece -i <instance> backup=        |
|---------------------------------+---------+-----------------------------------------------------------|

So to restore everything in a specified backup file, you would need
something like this in your =ece-install.conf= file:
#+BEGIN_SRC conf
fai_enabled=1
fai_restore_from_backup=1
fai_restore_all=1
fai_restore_from_file=/var/backups/escenic/engine-dev1-backup-2011-10-10.tar.gz
#+END_SRC

=ece-install= can also remove unwanted files from an existing
installation prior to restoring from a backup. You can specify the
files you would like to remove using the following parameters:

|------------------------------+---------+-----------------------------------|
| Parameter                    | Default | Description                       |
|------------------------------+---------+-----------------------------------|
| =fai_restore_pre_wipe_all=   |       0 | Remove all data/state & log files |
| =fai_restore_pre_wipe_cache= |       0 | Remove the cache files            |
| =fai_restore_pre_wipe_crash= |       0 | Remove the crash files            |
| =fai_restore_pre_wipe_logs=  |       0 | Remove all log files              |
| =fai_restore_pre_wipe_solr=  |       0 | Remove the solr data/state files  |
|------------------------------+---------+-----------------------------------|

*** Data security
You must be careful when restoring backups that you don't
inadvertently restore the backup over a system that actually contains
valuable data. =ece-install= incorporates some safeguards, but
ultimately cannot prevent you from making such mistakes.

If you try to restore the DB and the ECE schema already exists, the
restore will fail as follows:
#+BEGIN_SRC text
[ece-install-8] Restoring the database contents on ubiquitous ...
[ece-install-24] Selecting the most recent database dump ece5db-2011-10-10.sql.gz
ERROR 1007 (HY000) at line 1: Can't create database 'ece5db'; database exists
ERROR 1050 (42S01) at line 25: Table '`ece5db`.`AccessControlList`' already exists
[ece-install-24] The command [restoring from var/backups/escenic/ece5db-2011-10-10.sql.gz] FAILED, exiting :-(
[ece-install-24] See /var/log/ece-install.log for further details.
#+END_SRC

** <<<=fai_analysis_install=>>>
To use this profile, add =fai_analysis_install=1= to your
=ece-install.conf= file.

This profile installs the Escenic Analysis Engine, and configures it
for production use with a sensible set of defaults.

The Analysis Engine uses a database to store statistics. You must not
use the same database as is used by the Content Engine for storing
publication contents.

** <<<=fai_nfs_server_install=>>>
To use this profile, add =fai_nfs_server_install=1= to your
=ece-install.conf= file.

This profile installs an NFS server.

** <<<=fai_nfs_client_install=>>>
To use this profile, add =fai_nfs_client_install=1= to your
=ece-install.conf= file.

This profile installs an NFS client, creates the client mount points
and mounts them on the host.

The following example shows the ece-install.conf settings required to 
mount the Escenic multimedia archive on the NFS server:
#+BEGIN_SRC conf
fai_enabled=1
fai_nfs_client_install=1
fai_nfs_server_address=192.168.1.200
fai_nfs_export_list="/var/exports/multimedia"  
#+END_SRC

** <<<=fai_vip_install=>>>
[[file:images/nfs-vip.png]]

To use this profile, add =fai_vip_install=1= to your
=ece-install.conf= file.

This profile is usually used in combination with one of the other
=ece-install= profiles. It makes a host capable of providing the
services it offers on specified virtual IP addresses (VIPs). This
makes it possible to provide fail-over for for all single points of failure ([[http://en.wikipedia.org/wiki/Single_point_of_failure][SPOFs)]] in
your installation, such as the file server or database.

You might, for example, in order to provide a robust file
server, install both an NFS server and a VIP provider on two hosts:

 *  The primary NFS server that provides the normal service on one host
 *  The secondary NFS server that takes over if the primary one fails
    on the other.

Installing VIP providers with the =fai_vip_install= profile
allows both servers to be accessed via the same virtual IP address, so
that a fail-over is invisible to users of the service.

The following =ece-install.conf= settings installs an NFS server and
configures two VIP providers:

 * The primary node (this host) at 192.168.1.112
 * The secondary node at 192.168.1.111

Both providers are configured to expose the NFS service on the VIP
192.168.1.200.

#+BEGIN_SRC conf
# install the NFS server
fai_enabled=1
fai_nfs_server_install=1
fai_nfs_export_list="/var/exports/multimedia"
fai_nfs_allowed_client_network="192.168.1.0/255.255.255.0"

# install the VIP provider, primary node
fai_vip_install=1
fai_vip_service_list="nfs-kernel-server"
fai_vip_primary_node_name=ubiquitous
fai_vip_primary_node_ip=192.168.1.112
fai_vip_primary_node_auth_key=d41d8cd98f00b204e9800998ecf8427efai_vip_secondary_node_name=ubiquitous-lts
fai_vip_secondary_node_ip=192.168.1.111
fai_vip_address=192.168.1.200
fai_vip_sibling_ip=$fai_vip_secondary_node_ip
#+END_SRC

The setting =fai_vip_sibling_ip=$fai_vip_secondary_node_ip= says that
the secondary node is this node's sibling, and therefore implicitly
defines this node as the primary node.

The secondary node can therefore be defined using an almost identical
configuration - only =fai_vip_sibling_ip= needs to be set differently:
#+BEGIN_SRC conf
fai_vip_sibling_ip=$fai_vip_primary_node_ip
#+END_SRC

The =fai_vip_primary_node_auth_key= setting is optional. If you do not
set it, ece-install will generate it for you. However, you will then have to
add the generated key to =ece-install.conf= when installing the secondary
node.

You can generate the key as follows:
#+BEGIN_SRC sh
$ dd if=/dev/urandom bs=512 count=1 | \
    openssl md5 | \
    cut -d' ' -f2   
#+END_SRC

** Installing from EARs instead of Binaries
It is possible to get =ece-install= to use a supplied EAR and
configuration archive instead of using the files provided with the
Escenic Content Engine and plugins.

The EAR to provide is the one you generate with:
#+BEGIN_SRC text
$ ece -i <instance> assemble 
#+END_SRC
Normally, the EAR will then be available in:
#+BEGIN_SRC conf
/var/cache/escenic/engine.ear
#+END_SRC

The configuration bundle must contain:
#+BEGIN_SRC text
engine/security
engine/siteconfig/bootstrap-skeleton
engine/siteconfig/config-skeleton
assemblytool/plugins/<plugin>/siteconfig
#+END_SRC

and optionally also:
#+BEGIN_SRC text
engine/solr/conf
#+END_SRC

A simple way to create this bundle, is to use a server which has the
assembly environment set up and then do:

#+BEGIN_SRC text
$ cd /opt/escenic
$ tar czf /tmp/nursery-skeleton-solr-and-security.tar.gz \
  engine/security \
  engine/siteconfig/config-skeleton/ \
  engine/solr/conf \
  engine/siteconfig/bootstrap-skeleton/
#+END_SRC

=/tmp/nursery-skeleton-solr-and-security.tar.gz= should now have everything
you need. You can now configure your FAI installation to use these by,
e.g.:

#+BEGIN_SRC conf
fai_presentation_ear=/tmp/engine.ear
fai_presentation_conf_archive=/tmp/nursery-skeleton-solr-and-security.tar.gz
#+END_SRC

Corresponding configuration options are available for the other server
profiles, see the table below.

The inclusion of the engine/solr directory makes it easy for users to
provide their own, optimised Solr configuration. In this context, also
note that a post install hook, set_up_solr.postinst, is available.

If you wish to provide Nursery configuration for the plugins, you
simply put them in engine/siteconfig/config-skeleton inside your
tarball, together with the other Nursery configuration files.

The =fai_presentation_conf_archive= and =fai_presentation_ear= variables
both accept the following types of value (here using the value of
=fai_presentation_ear= as an example):
- =http://build.server/stable/engine-mysite.com-1.2.3.ear=
- =https://build.server/stable/engine-mysite.com-1.2.3.ear=
- =file:///var/lib/build/stable/engine-mysite.com-1.2.3.ear=
- =/var/lib/build/stable/engine-mysite.com-1.2.3.ear=

** Setting up virtual hosts
Setting up virtual host definitions in the application server makes a
some things easier, such as ECE plugins which set cookies based on
information they get from the app server.

ece-install can set up the virtual hosts configuration for Tomcat
application servers if the profile is editorial, all presentation.

To use this feature, you must define one domain for each publication
in the following FAI parameter:
#+BEGIN_SRC conf
fai_publication_domain_mapping_list="
  firepub#fire.escenic.com
  ildpub#ild.escenic.com#feuer.escenic.com,fuego.escenic.com
"
#+END_SRC

This will produce the following stanzas in server.xml:

#+BEGIN_SRC nxml
<Host name="fire.escenic.com" appBase="webapps" autoDeploy="false">
  <Context displayName="fire.escenic.com"
           docBase="firepub"
           path=""
  />
</Host>
<Host name="ild.escenic.com" appBase="webapps" autoDeploy="false">
  <Alias>feuer.escenic.com</Alias>
  <Alias>fuego.escenic.com</Alias>
  <Context displayName="ild.escenic.com"
           docBase="ildpub"
           path=""
  />
</Host>
#+END_SRC

As you can see, there's a third optional option to the
=fai_publication_domain_mapping_list= which can be specified as a
comma separated list of host aliases to be added to the app server host
configuration. 

Furthermore, if these host names are  not resolvable to your local
host (neither localhost or the IP of your $HOSTNAME), ece-install will
add entries for these domains in the machine's /etc/hosts:
#+BEGIN_SRC conf
# added by ece-install @ Wed Feb  8 19:21:49 CST 2012
127.0.1.1 fire.escenic.com

# added by ece-install @ Wed Feb  8 19:21:51 CST 2012
127.0.1.1 ild.escenic.com
#+END_SRC

If you do not want ece-install to touch your /etc/hosts, you can set
fai_keep_off_etc_hosts=1 in your ece-install.conf

** Overview of All FAI Parameters
The ece-install script understands the following settings in the
$HOME/ece-install.conf file of the root user:

|---------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------|
| Parameter                             | Default                                                      | Description                                                                                              |
|---------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------|
| =fai_all_conf_archive=                | ""                                                           | conf.tar.gz to use for Nursery & JAAS configuration                                                      |
| =fai_all_ear=                         | ""                                                           | EAR to use instead of the Escenic binaries                                                               |
| =fai_all_install=                     | 0                                                            | Install all components on your server.                                                                   |
| =fai_all_stop_and_clear=              | 0                                                            | After installation, stop the instance and clear its work & log files.                                    |
| =fai_analysis_db_host=                | localhost                                                    | For the EAE DB (different from ECE's)                                                                    |
| =fai_analysis_db_install=             | 0                                                            | Install DB profile                                                                                       |
| =fai_analysis_db_password=            | read-the-source-luke                                         | For the EAE DB (different from ECE's)                                                                    |
| =fai_analysis_db_port=                | 3306                                                         | For the EAE DB (different from ECE's)                                                                    |
| =fai_analysis_db_schema=              | ece5db                                                       | For the EAE DB (different from ECE's)                                                                    |
| =fai_analysis_db_user=                | ece5user                                                     | For the EAE DB (different from ECE's)                                                                    |
| =fai_analysis_install=                | 0                                                            | Will install the Escenic Analysis Engine, aka Stats, EAE.                                                |
| =fai_analysis_name=                   | analysis1                                                    | EAE instance name                                                                                        |
| =fai_analysis_port=                   | 8080                                                         | Port of the EAE                                                                                          |
| =fai_analysis_shutdown=               | 8005                                                         | Shutdown port for the EAE app server                                                                     |
| =fai_analysis_stop_and_clear=         | 0                                                            | After installation, stop the instances and clear its work & log files                                    |
| =fai_apt_vizrt_pool=                  | stable                                                       | Which package pool in the Vizrt APT to install package from.                                             |
| =fai_cache_backends=                  | ${HOSTNAME}:8080                                             | Space separated, e.g. "app1:8080 app2:8080"                                                              |
| =fai_cache_install=                   | 0                                                            | Install cache server profile                                                                             |
| =fai_db_daily_backup=                 | 0                                                            | Sets up daily backup of the DB.                                                                          |
| =fai_db_drop_old_db_first=            | 0                                                            | Warning: this will drop the old database before installing a new one                                     |
| =fai_db_host=                         | $HOSTNAME                                                    | Useful for editor & presentation profiles                                                                |
| =fai_db_install=                      | 0                                                            | Install db profile                                                                                       |
| =fai_db_password=                     | read-the-source-luke                                         | Useful for DB installation profile                                                                       |
| =fai_db_port=                         | 3306                                                         | Useful for editor & presentation profiles                                                                |
| =fai_db_schema=                       | ece5db                                                       | Useful for DB installation profile                                                                       |
| =fai_db_user=                         | ece5user                                                     | Useful for DB installation profile                                                                       |
| =fai_editor_conf_archive=             | ""                                                           | conf.tar.gz to use for Nursery & JAAS configuration                                                      |
| =fai_editor_deploy_white_list=        | "escenic-admin escenic studio indexer-webservice webservice" | The list of WARs to be deployed on this instance.                                                        |
| =fai_editor_ear=                      | ""                                                           | EAR to use instead of the Escenic binaries                                                               |
| =fai_editor_install=                  | 0                                                            | Install the editorial profile                                                                            |
| =fai_editor_name=                     | editor1                                                      | Name of the editor instance                                                                              |
| =fai_editor_port=                     | 8080                                                         | HTTP port of the editor instance                                                                         |
| =fai_editor_shutdown=                 | 8005                                                         | Shutdown port of the editor instance                                                                     |
| =fai_editor_stop_and_clear=           | 0                                                            | After installation, stop the instances and clear its work & log files                                    |
| =fai_enabled=                         | 0                                                            | Whether or not to run ece-install in FAI mode                                                            |
| =fai_keep_off_etc_hosts=              | 0                                                            | Set this to 1 if you don't want ece-install adding entries to /etc/hosts                                 |
| =fai_monitoring_admin_password=       | No telling you here ;-)                                      | The admin password of the web interface(s). Currenlty only set for Icinga.                               |
| =fai_monitoring_ece_host_list=        | ""                                                           | Hosts running one or more ECE instance                                                                   |
| =fai_monitoring_host_list=            | ""                                                           | Quoted, space separated list of <host>#<ip> pairs, e.g.: "pres1#10.72.227.250 pres2#10.72.227.251"       |
| =fai_monitoring_install=              | 0                                                            | Install the monitoring server profile.                                                                   |
| =fai_monitoring_munin_node_list=      | ""                                                           | Set this to a whitespace separated list of nodes that munin should monitor                               |
| =fai_monitoring_search_host_list=     | ""                                                           | Hosts running search instance(s) (Solr + indexer)                                                        |
| =fai_monitoring_server_ip=            | 127.0.0.1                                                    | The IP of the monitoring server.                                                                         |
| =fai_nfs_allowed_client_network=      | ""                                                           | IP/netmwask of allowed NFS clients, example: 192.168.1.0/255.255.255.0                                   |
| =fai_nfs_client_install=              | 0                                                            | Installs an NFS client                                                                                   |
| =fai_nfs_client_mount_point_parent=   | /mnt                                                         | Mount point parent directory                                                                             |
| =fai_nfs_export_list=                 | ""                                                           | Space separated list of NFS export directories, full paths as seen on the NFS server.                    |
| =fai_nfs_server_address=              | ""                                                           | Address of the NFS server, useful for the NFS client profile                                             |
| =fai_nfs_server_install=              | 0                                                            | Install an NFS server                                                                                    |
| =fai_presentation_conf_archive=       | ""                                                           | conf.tar.gz to use for Nursery & JAAS configuration                                                      |
| =fai_presentation_ear=                | ""                                                           | EAR to use instead of the Escenic binaries                                                               |
| =fai_presentation_install=            | 0                                                            | Install the presentation server profile                                                                  |
| =fai_presentation_name=               | web1                                                         | Name of the presentation server instance                                                                 |
| =fai_presentation_port=               | 8080                                                         | HTTP port of the presentation server instance                                                            |
| =fai_presentation_deploy_white_list=  | "escenic-admin <assemblytool/publications/*>"                | The list of WARs to be deployed on this instance.                                                        |
| =fai_presentation_shutdown=           | 8005                                                         | Shutdown port of the presentation instance                                                               |
| =fai_presentation_stop_and_clear=     | 0                                                            | After installation, stop the instances and clear its work & log files                                    |
| =fai_public_host_name=                | ${HOSTNAME}:8080                                             | The public address for your website                                                                      |
| =fai_publication_create=              | 0                                                            | Create a new publication                                                                                 |
| =fai_publication_domain_mapping_list= | ""                                                           | Mapping between publication names and their domains: "one#one.com other#other.com[#<alias1>[,<alias2>]]" |
| =fai_publication_environment=         | "production"                                                 | The kind of environment/habitat. Typical values are: production, staging, testing, development.          |
| =fai_publication_name=                | mypub                                                        | Name of the publication                                                                                  |
| =fai_publication_use_instance=        | dev1                                                         | Name of local instance to use for creation                                                               |
| =fai_publication_war_uri_list=        | ""                                                           | Publication WARs used for setting up Assembly tool.                                                      |
| =fai_publication_war=                 | "WF or ECE demo WAR"                                         | WAR to base the new publication on                                                                       |
| =fai_rmi_install=                     | 0                                                            | Install RMI hub profile                                                                                  |
| =fai_search_conf_archive=             | ""                                                           | conf.tar.gz to use for Nursery & JAAS configuration                                                      |
| =fai_search_deploy_white_list=        | "solr indexer-webapp"                                        | The list of WARs to be deployed on this instance.                                                        |
| =fai_search_ear=                      | ""                                                           | EAR to use instead of the Escenic binaries                                                               |
| =fai_search_for_editor=               | 0                                                            | If 1 (true), will configure Solr for use with an editorial server, if not for presentation servers.      |
| =fai_search_indexer_ws_uri=           | http://${HOSTNAME}:8080/indexer-webservice/index/            | URI of the indexer-webservice that the search instance shall use for knowing what to index.              |
| =fai_search_install=                  | 0                                                            | Install the search server profile (Solr + indexer)                                                       |
| =fai_search_name=                     | search1                                                      | Name of the search instance                                                                              |
| =fai_search_port=                     | 8080                                                         | HTTP port of the search instance                                                                         |
| =fai_search_shutdown=                 | 8005                                                         | Shutdown port of the search instance                                                                     |
| =fai_vip_address=                     | ""                                                           | The virtual IP the provider will claim                                                                   |
| =fai_vip_install=                     | 0                                                            | Install a VIP provider                                                                                   |
| =fai_vip_primary_node_auth_key=       | ""                                                           | Optional, but useful to set to make conf files consistent. Will be generated if not set                  |
| =fai_vip_primary_node_ip=             | ""                                                           | Primary node IP                                                                                          |
| =fai_vip_primary_node_name=           | ""                                                           | Primary node name, must be what $(uname -n) returns                                                      |
| =fai_vip_secondary_node_ip=           | ""                                                           | Secondary node IP                                                                                        |
| =fai_vip_secondary_node_name=         | ""                                                           | Secondary node name, must be what $(uname -n) returns                                                    |
| =fai_vip_service_list=                | ""                                                           | List of init.d scripts to invoke when the VIP is acclaimed/revoked, script must support start & stop     |
| =fai_vip_sibling_ip=                  | ""                                                           | The IP of the other node offering the VIP                                                                |
| =fai_wf_install=                      | 0                                                            | Install Widget Framework profile                                                                         |
|---------------------------------------+--------------------------------------------------------------+----------------------------------------------------------------------------------------------------------|

0 means "false" and 1 means "true".

** Example Configurations
Here are a few simple example configurations:

****** Install an Editorial Server and Create a Publication
To automatically install an editorial server and create a publication
called "jollygood", run =ece-install= with the following settings:

#+BEGIN_SRC conf
fai_enabled=1
fai_editor_install=1
fai_publication_create=1
fai_publication_name=jollygood
#+END_SRC

****** Install Two Presentation Servers On a Single Host
To install two presentation servers called =web1= and
=web2= on the same host,  first run =ece-install= with the following settings:
#+BEGIN_SRC conf
fai_enabled=1
fai_presentation_install=1
fai_presentation_name=web1
#+END_SRC 

Then run it a second time with the following settings:
#+BEGIN_SRC conf
fai_enabled=1
fai_presentation_install=1
fai_presentation_name=web2
fai_presentation_port=8081
fai_presentation_shutdown=8105
#+END_SRC
More parameters are required the second time. On the first run,
defaults could be used, but the second time you need to override the
defaults to ensure that the second server gets different values.

* Running More Than One Installation Process
If the script believes there's already an ece-intall process running,
it will abort:
#+BEGIN_SRC text
[ece-install] There's already one ece-install process running. If you believe
[ece-install] this is wrong, e.g. if a previous run of ece-install was aborted
[ece-install] before it completed, you may delete /var/run/ece-install.pid and
[ece-install] run ece-install again.
#+END_SRC

* Re-running ece-install (and How To Speed It Up)
Although the initial thought behind ece-install, is to run it on a
clean system to get up and running as soon as possible. However, you
may want to re-run ece-install on the same host, for instance to add
another instance of ECE, set up Widget Framework or create another
publication.

ece-install has a number of features which will try to minimise the
time it takes to run it on consecutive runs. If running on Debian
based systems, it will check if you already have installed
pre-requisite 3rd party libraries and only if any are missing will it
ask the package manager to fetch it.

Likewise, ece-install will see if the Escenic artifacts or application
server that you need are already present in the /tmp/ece-downloads
folder, and only download the missing ones (if any).

To get a list of the artifacts it'll pull from
http://technet.escenic.com and http://tomcat.apache.org search for the
following variables:
- =technet_download_list=
- =wf_download_list=
- =tomcat_download=

Two other ways of speeding up the installation is (of course) to use
the backup/restore feature or install from a EAR and configuration
bundle, see the FAI section.

* Modifying installed versions
Given that the mysqld is installed, this profile will download all the
Escenic components and install the ECE database schema based from the
SQL files contained inside the distribution bundles specified with in
the =technet_download_list= and =wf_dowload_list= variables. The
defaults are inside the =ece-install= script itself, but you can
overrides these in your =ece-install.conf= if you wish different minor
versions of the ECE and plugins.

* Using a Custom Configuration File for ece-install
You can specify a different configuration by using the -f parameter: 
#+BEGIN_SRC text
$ ece-install -f ece-install-presentation-server.conf
#+END_SRC

* Overview of File Paths Used by the ece-install script
There are of course other paths involved when setting up your system,
but these should be the most interesting ones.

|-----------------------------------------------+------------------------------------------------------------------|
| Path                                          | Explanation                                                      |
|-----------------------------------------------+------------------------------------------------------------------|
| =/etc/apt/sources.list.d/escenic.list=        | 3rd party APT repositories added by ece-install *)               |
| =/etc/default/ece=                            | The configuration file for the ece init.d script                 |
| =/etc/escenic/ece-<instance>.conf=            | Instance specific settings for =/usr/bin/ece=                    |
| =/etc/escenic/ece.conf=                       | Common ece.conf file for =/usr/bin/ece=                          |
| =/etc/escenic/engine/common=                  | Common Nursery configuration layer                               |
| =/etc/escenic/engine/common/security=         | Common security configuration for all ECE instances.             |
| =/etc/escenic/engine/common/trace.properties= | Log4j configuration, produces instance specific log files.       |
| =/etc/escenic/engine/instance/<instance>=     | Instance specific Nursery configuration                          |
| =/etc/escenic/solr=                           | ECE specific Solr configuration                                  |
| =/etc/init.d/mysql[d]=                        | For starting and stopping MySQL/Percona                          |
| =/etc/init.d/varnish=                         | For starting and stopping Varnish                                |
| =/etc/intit.d/ece=                            | The init.d script managing _all_ the ECE instances on your host. |
| =/etc/varnish/default.vcl=                    | The Varnish configuration                                        |
| =/opt/escenic=                                | All ECE components can be found here                             |
| =/opt/escenic/assemblytool=                   | The assembly tool                                                |
| =/opt/escenic/assemblytool/plugins=           | Contains symlinks to all plugins in =/opt/escenic=               |
| =/opt/escenic/engine=                         | Symlink pointing to the current ECE                              |
| =/opt/tomcat=                                 | Symlink pointing to the install Apache Tomcat (=catalina_home=)  |
| =/opt/tomcat-<instance>=                      | Instance specific Tomcat files (=catalina_base=)                 |
| =/usr/bin/ece=                                | Script for operating all ECE instances + RMI hub and EAE         |
| =/usr/sbin/ece-install=                       | The installation script described in this guide                  |
| =/var/log/escenic/<type>-<instance>.log=      | The instance's log4j log                                         |
| =/var/log/escenic/<type>-<instance>.out=      | The instance system out log                                      |
| =/var/log/escenic/solr.<date>.log=            | The Solr log (not in standard out!)                              |
| =/var/run/escenic/<type>-<instance>.pid=      | The instance's  PID file                                         |
|-----------------------------------------------+------------------------------------------------------------------|

*) Applies only to Debian based systems.

* Overriding the Escenic directories
All of the Escenic specific directories may be overwritten in
ece-install.conf. Here's an example of changing all the paths possible
with the same suffix.

#+BEGIN_SRC conf
dir_suffix=escenic-parallel
escenic_root_dir=/opt/${dir_suffix}
escenic_conf_dir=/etc/${dir_suffix}
escenic_log_dir=/var/log/${dir_suffix}
escenic_data_dir=/var/lib/${dir_suffix}
escenic_run_dir=/var/run/${dir_suffix}
escenic_backups_dir=/var/backups/${dir_suffix}
escenic_spool_dir=/var/spool/${dir_suffix}
escenic_cache_dir=/var/cache/${dir_suffix}
escenic_crash_dir=/var/crash/${dir_suffix}
appserver_parent_dir=/opt
#+END_SRC

Note, this is only needed if you are running two completely separate
environments on the same host. A use case is if you're setting up a
test environment and want to separate stacks of Escenic Content Engine
and plugins.

* Extending ece-install by Writing Hooks
ece-install  has a number of hooks on which you can hook on your own
scripts. The scripts are to reside in $HOME/ece-conf.d/ and have names
inspired by Debian's package scripts:

#+BEGIN_SRC text
<hook name>.<phase>
#+END_SRC

e.g.:

#+BEGIN_SRC text
install_analysis_server.preinst
#+END_SRC

Will be run before the body of the hook, just the corresponding
.postinst hook will be run after.

** Accessing ece-install variables
Before running the hook, ece-install will make all its local variables
available in /var/run/escenic/ece-install.env, which can then be used
by the hook scripts.

** Example hook
Here is an example hook which will be run after the EAE is installed.

#+BEGIN_SRC sh
# Put this in is $HOME/ece-install.d/install_analysis_server.postinst

# read ece-install's current variables
source /var/run/escenic/ece-install.env

# do something useful
echo "Hello from $0, EAE is installed in ${tomcat_base}" > /tmp/hello.txt
#+END_SRC

** Available hooks
Currently, the following hooks are available:

#+BEGIN_SRC text
install_analysis_server.preinst
install_analysis_server.postinst
set_up_solr.preinst
set_up_solr.postinst
#+END_SRC

* Uninstalling Everything that the ece-install Set Up
WARNING: this is potentially dangerous as some of these components may
be used by other pieces of software you have running on your
host. However, this may be useful if you're installing a clean
environment and want to e.g. undo your previous install to install a
different profile.

You trigger this by setting the following in your ece-install.conf
#+BEGIN_SRC conf
fai_un_install_everything=1
#+END_SRC

    
ece-install will then prompt the user to type a confirmation
sentence. Once the un-installation is done, a summary is printed to
the user.

ece-install will then continue with the other tasks and installation
profiles if so defined. The fai_un_install_everything=1 is processed
before any other FAI profile, hence, on a system where you want to
wipe the slate clean before starting over, you can for instance do:

#+BEGIN_SRC conf
fai_un_install_everything=1
fai_presentation_install=1
#+END_SRC

The output will be similar to:
#+BEGIN_SRC text
[ece-install-5] You have set fai_un_install_everything=1 in your /root/ece-install.conf
[ece-install-5] This will uninstall the following on raven:
[ece-install-5] Packages to be removed: ant ant-contrib ant-optional escenic-content-engine-scripts escenic-munin-plugins escenic-munin-plugins libmysql-java maven2 memcached munin munin-node munin-plugins-extra munin-java-extra nginx percona-server-client percona-server-client-5.5 percona-server-common-5.5 percona-server-server percona-server-server-5.5 varnish sun-java6-jdk
[ece-install-5] Files & directories to be removed: /etc/escenic /opt/*tomcat* /opt/escenic /var/lib/escenic /var/run/escenic /etc/escenic /var/log/escenic /etc/apt/sources.list.d/escenic.list
[ece-install-5] APT keys to be removed: C4DEFFEB CD2EFD2A
[ece-install-5] If you're absolutely sure about this, type:
[ece-install-5] I know what I'm doing, please do as I say.
I know what I'm doing, please do as I say.
[ece-install-11] OK, I'll do as you wish:
[ece-install-11] I will uninstall everything set up by ece-install
[ece-install-11] Everything (well, most) set up by ece-install should now
[ece-install-11] have been removed from raven.
#+END_SRC

