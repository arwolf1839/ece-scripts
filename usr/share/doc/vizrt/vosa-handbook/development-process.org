* Development Process

This chapter tells you how to install and set up your development
environment, and then describes how you can use the
tools in the environment to carry out everyday development tasks.

The main components of the VOSA development environment are:

 - Apache Subversion :: All your project code is stored here, under strict
                 version control.
 - Apache Maven :: Apache Maven provides dependency management and
                   controls the SW build process.
 - IntelliJ IDEA Ultimate :: Your editor and coding environment.
 - VirtualBox :: Lets you run a complete
                 copy of your production site in a virtual
                 machine on your PC, making it easy to test your code changes
                 as you make them.
 - HipChat :: A chat room service that you can use to communicate with
              other members of your project, stakeholders in the
              project (customers, users and so on) and Vizrt support
              staff. The chat room for your project also has a special
              member called Guru. Guru is a robot who will do various
              jobs for you such as building and deploying new versions
              of the site.
 - JIRA :: A bug tracking service that is used to track all work done
           in the project. All changes to be made are registered as
           change requests in JIRA, and Subversion will only allow you
           to check in changes that have a valid JIRA ticket number.

** Installation

You need to install the following items on your PC or Mac:

 - The Oracle Java Development Kit, version 7 (??). You can get this
   from [[http://www.oracle.com/technetwork/java/javase/downloads/java-se-jdk-7-download-432154.html]].
 - Apache Subversion client software. You can get this from
   [[http://subversion.apache.org/packages.html]] (or on Linux, you can
   most likely install it using your package manager).
 - Apache Maven version 3. You can get this from
   [[http://maven.apache.org/download.html]]  (or on Linux, you can
   most likely install it using your package manager).
 - IntelliJ IDEA Ultimate, version 11.x. You can download this from
   [[http://www.jetbrains.com/idea/download/]]. Be sure to download the
   Ultimate version, which is licensed software. Depending on the
   licensing arrangement at your site you may need to enter a license
   number after installation - talk to your project manager for more
   information. Note that earlier versions of IntelliJ IDEA do not
   contain all the functions required by the VOSA development process
   and will not work properly.

During the IntelliJ IDEA installation process you are allowed to
choose which plug-ins to activate. You should activate at least the
following plug-ins (although you may find you have use for others):

 - Maven integration plug-in
 - Subversion integration plug-in
 - ??

All of the above products have their own installation
procedures. Follow the relevant procedures for your operating system,
and make sure they are correctly installed before continuing with the
set-up of your development environment.

** Set-up

Setting up your development environment involves:

 - Configuring the SW you have installed
 - Obtaining copies of the code and systems you are going to work on

*** Set up your local test site

Download the following virtual machine image:

 [[<%= trail_dev_image_uri %>]]

When the file has finished downloading, double-click on it. This
starts VirtualBox, which opens the file and creates a virtual machine
from it. When the virtual machine is ready, a [[<%= trail_dev_image_name %>]] entry will appear
in the list on the left hand side of the VirtualBox window. 


Click on *Start* to run the machine. A terminal window is displayed,
showing the virtual machine boot-up messages. When the boot sequence
has finished, the terminal window will contain an information page
starting with the following welcome message:

#+BEGIN_SRC default
Welcome to http://[[<%= trail_dev_host_name %>]] development environment
#+END_SRC

This is the URL you must use to access your test site.

Below this welcome messages are the IP addresses used by the virtual
machine and the user name/password combinations you can use to log in
to the system.

In order to be able to use [[<%= trail_dev_host_name %>]] URLs, you need to add the host name
[[<%= trail_dev_host_name %>]] to your computer's =hosts= file. To do this:

1. Open your hosts file in a text editor. On a Windows PC, you will find the
   hosts file at =C:\Windows\System32\drivers\etc\hosts=. On a Mac or Linux 
   machine you will find it at =/etc/hosts=.
2. Add the following line to the file:
   #+BEGIN_SRC default
   /ip-address/ [[<%= trail_dev_host_name %>]]
   #+END_SRC
   where /ip-address/ is the =eth1= IP address listed on the virtual machine's welcome page.
3. Save your changes.
  
Your test system is now up and running. You should be able to access
your test site by opening a browser and navigating to http://[[<%= trail_dev_host_name %>]].

*** Check out your project

To check out your project:

1. Start Intellij.
2. Click on the *Check out from Version Control* link.
3. If a list of version control systems is displayed, select Subversion.
4. Click on the + icon to add a new repository.
5. Paste this:
   #+BEGIN_SRC default
   https://vizrtcustomers.jira.com/svn/[[<%= trail_dev_project_name %>]]
   #+END_SRC
   into the displayed dialog, and click on *OK*.
6. Select the repository you have added to the list and select *Checkout*.
7. Choose/create a destination folder for the project and click *OK* three times.
8. When asked if you want to create an IntelliJ project for the source files, select 
   *No* and except the wizard's defaults.

*** Configure Maven

You need to add a reference to the Vizrt software repository to your
Maven settings files. To do this:

1. Open the Maven settings file for editing. On Windows you will find
   it at =??=. On  Mac and Linux you will find it at
   =/home/<your-user>/.m2/settings.xml=.
2. Add the following 

** TODO Jira


** TODO Source code repository


** TODO The builder


** Development image

The main environment for change is the local development environment 
a.k.a. "dev image". The dev image is downloaded as a .ova file that 
can be imported into VirtualBox or VMWare Player. It works under 
Windows, OSX and Linux, and provides an Ubuntu image with Escenic 
Content Engine already installed with a publication and an .ear 
file from the project.

*** Download .ova file

Your dev image can be downloaded here - [[<%= trail_dev_image_uri %>][Local development environment]].

*** Import .ova file into VirtualBox

1) After you have downloaded the .ova file you can open the file in i.e. VirtualBox.

	[[./graphics/development-process/01-download-image.png]]

2) VirtualBox will recognize the format and offer you a dialog for importing the image.

	[[./graphics/development-process/02-import-image.png]]

3) After klicking "Import" you will be asked to agree to a license agreement and after clicking "Agree" the import process will start.

	[[./graphics/development-process/03-agree-to-license.png]]
	
	[[./graphics/development-process/04-wait-for-import.png]]

4) When the import finished the VirtualBox Manager will open and your image will be visible in a list. It's now time to adjust your settings. Unless you have very specific changes you would like to perform for memory, number of CPUs etc... opening the settings dialog and then click "OK" is enough to finish the initial configuration.
	
	[[./graphics/development-process/05-adjust-settings.png]]

	[[./graphics/development-process/06-apply-settings.png]]

5) The next step will be to start the image. This is done by selecting the image in the list and then click "Start" in the VirtualBox Manager.

	[[./graphics/development-process/07-power-on.png]]

6) After the image has started up, you should be able to see its local IP address. This is the IP you need to add to the hosts file on your workstation/laptop.

	[[./graphics/development-process/08-fetch-ip.png]]

*** What's included

- Ubuntu (actually, an Ubuntu Enterprise Cloud Image, modified to boot under almost any hypervisor.)
- two virtual network cards, one for outbound NAT traffic and the other for inbound traffic.
- varnish cache (just like in production)
- memcached (just like in production)
- separate solr java (just like in production)
- remote debugging enabled (on port 5005)

/Which publications are available?/
|-----------------+------------------------------------|
| Publication     | username / password                |
|-----------------+------------------------------------|
| [pubName]       | [pubName]_admin / admin            |
|-----------------+------------------------------------|

/What are the important credentials?/

Operating system: The usernames ubuntu (with sudo privileges), escenic (runs escenic).

